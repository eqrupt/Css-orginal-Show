### 测试手段
1. 创建一个新的Vue页面,引入vue.draggable组件
2. 在页面中添加一个简单的列表,使用v-model绑定数据
3. 为列表添加拖拽功能,测试拖拽排序是否正常
4. 测试拖拽时的各种事件回调
5. 测试不同组之间的拖拽
6. 测试禁用拖拽功能
7. 测试克隆模式
8. 测试动画效果
9. 测试拖拽手柄
10. 测试过滤功能
11. 性能测试 - 大量数据的拖拽表现
12. 兼容性测试 - 在不同浏览器中测试
13. 移动端测试 - 触摸拖拽功能

1
### 测试步骤
1. 基础拖拽功能测试
- 创建包含5个列表项的简单列表
- 确认可以上下拖动排序
- 验证排序后数据是否正确更新

1. 事件回调测试  
- 测试start事件(开始拖拽时触发)
- 测试add事件(添加元素时触发) 
- 测试remove事件(移除元素时触发)
- 测试end事件(拖拽结束时触发)
- 测试change事件(排序改变时触发)

1. 分组拖拽测试
- 创建两个分组列表
- 测试组内拖拽
- 测试跨组拖拽
- 验证数据同步

1. 功能限制测试
- 测试禁用整个列表拖拽
- 测试禁用单个元素拖拽
- 测试只允许拖拽手柄
- 测试过滤规则

1. 克隆模式测试
- 开启克隆模式
- 测试拖拽时是否生成副本
- 验证源数据是否保持不变

1. 动画效果测试
- 测试拖拽时的过渡动画
- 测试添加/删除时的动画
- 验证动画是否流畅

1. 性能测试
- 创建包含100个项目的列表
- 测试拖拽的流畅度
- 监控内存占用

1. 移动端适配测试
- 在不同移动设备上测试触摸拖拽
- 测试长按拖拽功能
- 验证触摸事件响应

1. 浏览器兼容性测试
- Chrome浏览器测试
- Firefox浏览器测试
- Safari浏览器测试
- Edge浏览器测试

1.  边界情况测试
- 测试空列表拖拽
- 测试单个元素拖拽
- 测试最大/最小限制
